@model List<CUSrinagar.Models.StudentsCourseWiseStatistics>
@using CUSrinagar.Extensions
@{
    Layout = null;
}
@section PageSpecificStyle{

}


@if (Model != null)
{
    var ListOfProgrammes = Model.Select(x => x.Programme).OrderBy(x => x).Distinct().ToList();
    List<CUSrinagar.Models.StudentsCourseWiseStatistics> _list = null;
    List<CUSrinagar.Models.StudentsCourseWiseStatistics> _sublist = null;
    List<CUSrinagar.Models.StudentsCourseWiseStatistics> _subsublist = null;
    var batches = Model.Select(x => x.SemesterBatch).Distinct().OrderBy(x => x).ToList();
    var ListOfColleges = Model.Select(x => x.CollegeFullName).Distinct();
    var listOfCategories = Model.Select(x => x.Category).Distinct().OrderBy(x => x).ToList();
    var listOfDistricts = Model.Select(x => x.District).Distinct().OrderBy(x => x).ToList();
    var count = 1;

<div id="accordion" class="accordion-style1 panel-group">
    <div class=" panel panel-default">
        <div class="panel-heading hidden-print">
            <h4 class="panel-title">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                    <i class="ace-icon fa fa-angle-down bigger-110" data-icon-hide="ace-icon fa fa-angle-down" data-icon-show="ace-icon fa fa-angle-right"></i>
                    &nbsp;Student enrollment: Program wise
                </a>
            </h4>
        </div>

        <div class="panel-collapse collapse" id="collapse1" style="page-break-after:always;">
            <div class="panel-body ">
                <table class="table table-hover table-bordered ">
                    <thead>
                        <tr>
                            <th colspan="@(7)">
                                <b>Student enrollment: Program wise</b>
                                <a class="pull-right jsPrintTable" style="cursor:pointer;"><i class="fa fa-print"></i></a>
                            </th>
                        </tr>
                        <tr>
                            <th>Programme</th>
                            <th>Sem</th>
                            <th>District</th>
                            <th>Total</th>
                            <th>Male</th>
                            <th>Female</th>
                            <th>Other</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            count = 1;
                            foreach (var item in ListOfProgrammes)
                            {
                                if (item == CUSrinagar.Enums.Programme.UG)
                                {
                                    _list = Model.Where(x => x.PrintProgramme == CUSrinagar.Enums.PrintProgramme.UG && x.Programme == CUSrinagar.Enums.Programme.UG)?.ToList();
                                    if (_list.IsNotNullOrEmpty())
                                    {
                                        foreach (var district in listOfDistricts)
                                        {
                                            _sublist = _list.Where(x => x.District == district).ToList();
                                            if (_sublist.IsNotNullOrEmpty())
                                            {
                                                <tr>
                                                    <td>@(count++).&emsp;&emsp;Graduation</td>
                                                    <td>@_list.First().Semester</td>
                                                    <td>@district</td>
                                                    <td>@(_sublist?.Sum(x => x.NoOfStudents))</td>
                                                    <td>@(_sublist?.Sum(x => x.Male))</td>
                                                    <td>@(_sublist?.Sum(x => x.Female))</td>
                                                    <td>@(_sublist?.Sum(x => x.Other))</td>
                                                </tr>
                                            }
                                        }
                                    }
                                    _list = Model.Where(x => x.PrintProgramme == CUSrinagar.Enums.PrintProgramme.BED && x.Programme == CUSrinagar.Enums.Programme.UG)?.ToList();
                                    if (_list.IsNotNullOrEmpty())
                                    {
                                        foreach (var district in listOfDistricts)
                                        {
                                            _sublist = _list.Where(x => x.District == district).ToList();
                                            if (_sublist.IsNotNullOrEmpty())
                                            {
                                                <tr>
                                                    <td>@(count++).&emsp;&emsp;BED</td>
                                                    <td>@_list.First().Semester</td>
                                                    <td>@district</td>
                                                    <td>@(_sublist?.Sum(x => x.NoOfStudents))</td>
                                                    <td>@(_sublist?.Sum(x => x.Male))</td>
                                                    <td>@(_sublist?.Sum(x => x.Female))</td>
                                                    <td>@(_sublist?.Sum(x => x.Other))</td>
                                                </tr>
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    _list = Model.Where(x => x.Programme == item)?.ToList();
                                    if (_list.IsNotNullOrEmpty())
                                    {
                                        foreach (var district in listOfDistricts)
                                        {
                                            _sublist = _list.Where(x => x.District == district).ToList();
                                            if (_sublist.IsNotNullOrEmpty())
                                            {
                                                <tr>
                                                    <td>@(count++).&emsp;&emsp;@(CUSrinagar.Extensions.Helper.GetEnumDescription(item))</td>
                                                    <td>@_list.First().Semester</td>
                                                    <td>@district</td>
                                                    <td>@(_sublist?.Sum(x => x.NoOfStudents))</td>
                                                    <td>@(_sublist?.Sum(x => x.Male))</td>
                                                    <td>@(_sublist?.Sum(x => x.Female))</td>
                                                    <td>@(_sublist?.Sum(x => x.Other))</td>
                                                </tr>
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        <tr>
                            <td colspan="3" class="text-center">
                                <strong>Total</strong>
                            </td>
                            <td>
                                <strong>@Model.Sum(i => i.NoOfStudents)</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Male))</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Female))</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Other))</strong>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class=" panel panel-default">
        <div class="panel-heading hidden-print">
            <h4 class="panel-title">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapse2">
                    <i class="ace-icon fa fa-angle-down bigger-110" data-icon-hide="ace-icon fa fa-angle-down" data-icon-show="ace-icon fa fa-angle-right"></i>
                    &nbsp;Student enrollment: Batch wise
                </a>
            </h4>
        </div>

        <div class="panel-collapse collapse" id="collapse2" style="page-break-after:always;">
            <div class="panel-body ">
                <table class="table table-hover table-bordered ">
                    <thead>
                        <tr>
                            <th colspan="@(7)">
                                <b>Student enrollment: Batch wise</b>
                                <a class="pull-right jsPrintTable" style="cursor:pointer;"><i class="fa fa-print"></i></a>
                            </th>
                        </tr>
                        <tr>
                            <th>Batch</th>
                            <th>Sem</th>
                            <th>District</th>
                            <th>Total</th>
                            <th>Male</th>
                            <th>Female</th>
                            <th>Other</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            count = 1;
                            foreach (var batch in batches)
                            {
                                _list = Model.Where(x => x.SemesterBatch == batch)?.ToList();
                                if (_list.IsNotNullOrEmpty())
                                {
                                    foreach (var district in listOfDistricts)
                                    {
                                        _sublist = _list.Where(x => x.District == district).ToList();
                                        if (_sublist.IsNotNullOrEmpty())
                                        {
                                            <tr>
                                                <td>@(count++).&emsp;&emsp;@(batch)</td>
                                                <td>@_list.First().Semester</td>
                                                <td>@district</td>
                                                <td>@(_sublist?.Sum(x => x.NoOfStudents))</td>
                                                <td>@(_sublist?.Sum(x => x.Male))</td>
                                                <td>@(_sublist?.Sum(x => x.Female))</td>
                                                <td>@(_sublist?.Sum(x => x.Other))</td>
                                            </tr>
                                        }
                                    }
                                    <tr class="bold">
                                        <td colspan="2" class="text-center">Total in @batch</td>
                                        <td>@_list.First().Semester</td>
                                        <td>@(_list?.Sum(x => x.NoOfStudents))</td>
                                        <td>@(_list?.Sum(x => x.Male))</td>
                                        <td>@(_list?.Sum(x => x.Female))</td>
                                        <td>@(_list?.Sum(x => x.Other))</td>
                                    </tr>
                                    <tr class="text-center">
                                        <td colspan="7" style="color:white;">| </td>
                                    </tr>
                                }
                            }
                        }
                        <tr>
                            <td colspan="3" class="text-center">
                                <strong>Total</strong>
                            </td>
                            <td>
                                <strong>@Model.Sum(i => i.NoOfStudents)</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Male))</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Female))</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Other))</strong>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class=" panel panel-default">
        <div class="panel-heading hidden-print">
            <h4 class="panel-title">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapse3">
                    <i class="ace-icon fa fa-angle-down bigger-110" data-icon-hide="ace-icon fa fa-angle-down" data-icon-show="ace-icon fa fa-angle-right"></i>
                    &nbsp;Student enrollment: College wise
                </a>
            </h4>
        </div>

        <div class="panel-collapse collapse" id="collapse3" style="page-break-after:always;">
            <div class="panel-body ">
                <table class="table table-hover table-bordered ">
                    <thead>
                        <tr>
                            <th colspan="@(7)">
                                <b>Student enrollment: College wise</b>
                                <a class="pull-right jsPrintTable" style="cursor:pointer;"><i class="fa fa-print"></i></a>
                            </th>
                        </tr>
                        <tr>
                            <th>College</th>
                            <th>Sem</th>
                            <th>District</th>
                            <th>Total</th>
                            <th>Male</th>
                            <th>Female</th>
                            <th>Other</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            count = 1;
                            foreach (var college in ListOfColleges)
                            {
                                _list = Model.Where(x => x.CollegeFullName == college)?.ToList();
                                if (_list.IsNotNullOrEmpty())
                                {
                                    foreach (var district in listOfDistricts)
                                    {
                                        _sublist = _list.Where(x => x.District == district).ToList();
                                        if (_sublist.IsNotNullOrEmpty())
                                        {
                                            <tr>
                                                <td>@(count++).&emsp;&emsp;@(college)</td>
                                                <td>@_list.First().Semester</td>
                                                <td>@district</td>
                                                <td>@(_sublist?.Sum(x => x.NoOfStudents))</td>
                                                <td>@(_sublist?.Sum(x => x.Male))</td>
                                                <td>@(_sublist?.Sum(x => x.Female))</td>
                                                <td>@(_sublist?.Sum(x => x.Other))</td>
                                            </tr>
                                        }
                                    }
                                    <tr class="bold">
                                        <td colspan="2" class="text-center">Total in @college</td>
                                        <td>@_list.First().Semester</td>
                                        <td>@(_list?.Sum(x => x.NoOfStudents))</td>
                                        <td>@(_list?.Sum(x => x.Male))</td>
                                        <td>@(_list?.Sum(x => x.Female))</td>
                                        <td>@(_list?.Sum(x => x.Other))</td>
                                    </tr>
                                    <tr class="text-center">
                                        <td colspan="7" style="color:white;">| </td>
                                    </tr>
                                }


                            }
                        }
                        <tr>
                            <td colspan="3" class="text-center">
                                <strong>Total</strong>
                            </td>
                            <td>
                                <strong>@Model.Sum(i => i.NoOfStudents)</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Male))</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Female))</strong>
                            </td>
                            <td>
                                <strong>@(Model?.Sum(i => i.Other))</strong>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>


    

</div>
}
else
{
    <div class="col-md-12">
        <div id="blocks-container">
            <hr />
            <h2 class="center" style="font-style:italic">No data available for the selected filters.Please try again with different combination of filters.</h2>
            <hr />
        </div>
    </div>
}


