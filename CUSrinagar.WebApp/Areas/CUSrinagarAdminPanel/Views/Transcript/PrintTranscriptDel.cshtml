@using CUSrinagar.Extensions
@using CUSrinagar.Enums
@using CUSrinagar.Models
@using GeneralModels;
@model List<Transcript>
@{
    ViewBag.Title = "Validate Transcript";
    Layout = null;
    Parameters param = ViewBag.Parameter;
    var _Course_ID = param.Filters.First(x => x.Column == "Course_ID").Value;
    var _AcceptCollege_ID = param.Filters.First(x => x.Column == "AcceptCollege_ID").Value;
}

@if (Model.IsNotNullOrEmpty())
{
    var Transcripts = Model.Where(x => x.Subject.IsNotNullOrEmpty() && x.SGPA.IsNotNullOrEmpty() && x.CGPA.IsNotNullOrEmpty()).ToList();
    var maxNumberOfSemesters = Transcripts.SelectMany(x => x.SGPA).Max(x => x.Semester);
    List<SubjectType> subjectTypes = null;

    @section CUSSitemap{
        <div class="col-md-12">
            <ul class="breadcrumb">
                <li>
                    <i class="ace-icon fa fa-home home-icon"></i>
                    <a href="@Url.Action("Index","Dashboard",new { area="CUSrinagarAdminPanel"})">Home</a>
                </li>
                <li class="active"><a href="@Url.Action("TranscriptSearch", "Transcript")">Validate Result</a> </li>
                <li class="bold">@Transcripts.First(x => !string.IsNullOrEmpty(x.CollegeFullName)).CourseFullName</li>
                <li class="bold">@Transcripts.First(x => !string.IsNullOrEmpty(x.CollegeFullName)).Batch</li>
                <li class="bold">@Transcripts.First(x => !string.IsNullOrEmpty(x.CollegeFullName)).CollegeFullName</li>
            </ul><!-- /.breadcrumb -->
        </div>
        <div class="col-md-7">
            @*<h2 class="no-margins">
                    Result Reports
                </h2>*@
        </div>
        <div class="col-md-4">
        </div>
    }

    <div class="row">
        <div class="col-sm-12">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>S.No.</th>
                        <th>Total Students</th>
                        <th>Credit</th>
                        <th>Date Of Declartions</th>
                        <th>Notification</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var _CGPAs = Transcripts.SelectMany(x => x.CGPA).Select(x => x.TotalCreditsEarned).Distinct().ToList();
                        for (int i = 0; i < _CGPAs.Count; i++)
                        {
                            var item = _CGPAs[i];
                            var notifications = Transcripts.SelectMany(x => x.CGPA).Where(x => x.TotalCreditsEarned == item).Select(x => x.NotificationNo).Distinct().ToList();
                            foreach (var not in notifications)
                            {
                                var count = Transcripts.SelectMany(x => x.CGPA).Where(x => x.TotalCreditsEarned == item && x.NotificationNo == not).Select(x => x.Student_ID).Distinct().Count();
                                var dateOfDeclarations = Transcripts.SelectMany(x => x.CGPA).Where(x => x.TotalCreditsEarned == item && x.NotificationNo == not).Select(x => x.DateofDeclaration.ToString("dd-MMM-yy")).Distinct().ToList();
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>@count</td>
                                    <td>@item</td>
                                    <td>@string.Join("|", dateOfDeclarations)</td>
                                    <td>@not</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>

        @*<div class="col-sm-12">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>S.No.</th>
                            <th>Subject Type</th>
                            <th>Credits</th>
                            <th>Count</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            subjectTypes = Transcripts.SelectMany(x => x.Subject).Select(x => x.SubjectType).Distinct().OrderBy(x => x.ToString()).ToList();
                            for (int i = 0; i < subjectTypes.Count; i++)
                            {
                                var item = subjectTypes[i];
                                foreach (var sitemCredit in Transcripts.SelectMany(x => x.Subject).Where(x => x.SubjectType == item).Select(x => x.Credit).Distinct())
                                {
                                    <tr>
                                        <td>@(i + 1)</td>
                                        <td>@item</td>
                                        <td><span>@sitemCredit</span></td>
                                        <td>
                                            <span>@(Transcripts.Where(x => x.Subject.Any(y => y.SubjectType == item && y.Credit == sitemCredit)).Select(x => x.CUSRegistrationNo).Distinct().Count() )</span>
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>*@

        <div class="col-sm-12">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>S.No.</th>
                        <th>Registration No</th>
                        <th>Credits</th>
                        <th>CGPA</th>
                        <th>Result Date</th>
                        <th>Created On</th>
                        <th>Validated On</th>
                        <th>Printed On</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Transcripts.Count(); i++)
                    {
                        var item = Transcripts[i];
                        subjectTypes = item.Subject.Select(x => x.SubjectType).Distinct().OrderBy(x => x.ToString()).ToList();
                        <tr>
                            <th>
                                @(i + 1)
                                @Html.HiddenFor(model => item.Student_ID, new { @class = "jsEntity_ID" })
                            </th>
                            <td>@item.CUSRegistrationNo</td>
                            <td>
                                <b>@string.Join("|", item.CGPA.Select(x => x.TotalCreditsEarned))</b>&nbsp;=>&nbsp;
                                @foreach (var sitem in subjectTypes)
                                {
                                    string code = CUSrinagar.DataManagers.GeneralFunctions.GetSubjectTypeCode(sitem);
                                    foreach (var sitemCredit in item.Subject.Where(x => x.SubjectType == sitem).Select(x => x.Credit).Distinct())
                                    {
                                        <span>@code</span><span>(</span><span title="credits">@string.Join(",", sitemCredit)</span><span>x</span><span title="no. of subjects">@item.Subject.Where(x => x.SubjectType == sitem && x.Credit == sitemCredit).Count()</span><span>)=</span><span title="total credits">@item.Subject.Where(x => x.SubjectType == sitem && x.Credit == sitemCredit).Sum(x => x.Credit)</span>
                                        <span>|</span>
                                    }
                                }
                                &nbsp;=>&nbsp;<b>@item.Subject.Where(x => subjectTypes.Any(y => y == x.SubjectType)).Sum(x => x.Credit)</b>
                            </td>
                            <td>
                                @string.Join(",", item.CGPA.Select(x => x.CGPA).Distinct())
                            </td>
                            <td>
                                @string.Join(",", item.CGPA.Select(x => x.DateofDeclaration.ToString("dd-MMM-yy")).Distinct())
                            </td>
                            <td>
                                <span>@string.Join(",", item.CGPA.Select(x => x.CreatedOn.ToString("dd-MMM-yy")).Distinct())</span>
                            </td>
                            <td>
                                @if (item.CGPA.First().IsValidated)
                                {
                                    <span>@string.Join(",", item.CGPA.Select(x => x.ValidatedOn.Value.ToString("dd-MMM-yy")).Distinct())</span>
                                }
                                else
                                {
                                    <button class="btn btn-sm jsValidated">Fine</button>
                                }
                            </td>
                            <td>
                                @if (item.CGPA.First().IsPrinted)
                                {
                                    <span>@string.Join(",", item.CGPA.Select(x => x.PrintedOn.Value.ToString("dd-MMM-yy")).Distinct())</span>
                                }
                                else
                                {
                                    <button class="btn btn-sm jsPrinted">Printed</button>
                                }
                            </td>

                            <td>
                                <a title="Marks Cards" target="_blank" href="@Url.Action("MarksSheet","MarksCard"
                                        ,new {
                                            @area="",
                                            Student_ID =item.CGPA.First().Student_ID
                                            , printProgramme=ViewBag.PrintProgramme })">
                                    <i class="fa fa-print"></i>
                                </a>
                                <a title="Transcript" target="_blank" href="@Url.Action("Transcripte","Transcript"
                                        ,new {
                                            Batch =item.Batch
                                            ,PrintProgramme=ViewBag.PrintProgramme
                                            ,Course_ID=_Course_ID
                                            ,AcceptCollege_ID=_AcceptCollege_ID
                                            ,CUSRegistrationNo=item.CUSRegistrationNo })">
                                    <i class="fa fa-print fa-2x"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="col-sm-12">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th title="Serial+Semester">S.No-Sem</th>
                        <th>Registration No</th>
                        <th>Exam Roll No</th>
                        <th>Sem</th>
                        <th>Credits</th>
                        <th>SGPA</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Transcripts.Count(); i++)
                    {
                        var item = Transcripts[i];
                        var Semesters = item.SGPA.Select(x => x.Semester).Distinct().OrderBy(x => x)?.ToList();
                        if (Semesters.IsNotNullOrEmpty())
                        {
                            for (int Semester = 1; Semester <= Semesters.Count; Semester++)
                            {
                                var _SGPATypes = item.SGPA.Where(x => x.Semester == Semester)?.ToList();
                                if (_SGPATypes.IsNotNullOrEmpty())
                                {
                                    for (int j = 0; j < _SGPATypes.Count(); j++)
                                    {
                                        var _SGPAType = _SGPATypes[j];
                                        subjectTypes = item.Subject.Where(x => x.Semester == Semester).Select(x => x.SubjectType).Distinct().OrderBy(x => x.ToString()).ToList();
                                        <tr>
                                            <td title="Serial+Semester">@((i + 1).ToString() + "-" + (Semester).ToString())</td>
                                            <td>@item.CUSRegistrationNo</td>
                                            <td>@item.ExamRollNumber</td>
                                            <td>@Semester</td>
                                            <td>
                                                <b>@_SGPAType.Credits</b>&nbsp;=>&nbsp;
                                                @foreach (var sitem in subjectTypes)
                                                {
                                                    string code = CUSrinagar.DataManagers.GeneralFunctions.GetSubjectTypeCode(sitem);
                                                    foreach (var sitemCredit in item.Subject.Where(x => x.SubjectType == sitem && x.Semester == Semester).Select(x => x.Credit).Distinct())
                                                    {
                                                        <span>@code</span><span>(</span><span title="credits">@string.Join(",", sitemCredit)</span><span>x</span><span title="no. of subjects">@item.Subject.Where(x => x.SubjectType == sitem && x.Credit == sitemCredit && x.Semester == Semester).Count()</span><span>)=</span><span title="total credits">@item.Subject.Where(x => x.SubjectType == sitem && x.Credit == sitemCredit && x.Semester == Semester).Sum(x => x.Credit)</span>
                                                        <span>|</span>
                                                    }
                                                }
                                                &nbsp;=>&nbsp;<b>@item.Subject.Where(x => subjectTypes.Any(y => y == x.SubjectType) && x.Semester == Semester).Sum(x => x.Credit)</b>

                                            </td>
                                            <th>@_SGPAType.SGPA</th>
                                            <td>
                                                <a title="Marks Cards" target="_blank" href="@Url.Action("MarksSheet","MarksCard"
                                                                                                ,new {
                                                                                                    @area="",
                                                                                                    Student_ID =item.CGPA.First().Student_ID
                                                                                                    , printProgramme=ViewBag.PrintProgramme })">
                                                    <i class="fa fa-print"></i>
                                                </a>
                                                <a title="Transcript" target="_blank" href="@Url.Action("Transcripte","Transcript"
                                                                                                ,new {
                                                                                                Batch =item.Batch
                                                                                                ,PrintProgramme=ViewBag.PrintProgramme
                                                                                                ,Course_ID=_Course_ID
                                                                                                ,AcceptCollege_ID=_AcceptCollege_ID
                                                                                                ,CUSRegistrationNo=item.CUSRegistrationNo })">
                                                    <i class="fa fa-print fa-2x"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <h3>No, records found</h3>
    <hr />
}
