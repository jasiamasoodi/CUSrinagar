@using CUSrinagar.Models
@model ARGStudentExamFormSubjects
@{
    ViewBag.Title = "Examination Form";
    short choosenSemester = (short)ViewBag.SemesterChoosen;
    var _StudentExamForm = (CUSrinagar.Models.ARGStudentExamFormSubjects)ViewBag.StudentExamForm;
    bool showSaveButton = false;
    bool hasLessSubjects = false;
}
@section CUSSitemap{
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Action("Examination")">Examination</a>
        </li>
        <li>
            <a href="@Url.Action("GetCombination",new {@Semester=choosenSemester })">Subject Combination</a>
        </li>
        <li>
            <a href="#" class="active">Examination Form</a>
        </li>
    </ul>
}
<div class="row">
    <div class="col-sm-12 col-md-12">
        <div class="col-sm-12 col-md-7 text-primary">
            <hr />
            <h4>Examination Form Details of Semester : @choosenSemester </h4>
            <hr />
        </div>
    </div>
</div>

<div class="row page-content">
    <div class="col-sm-12 col-md-12">
        @if (_StudentExamForm != null)
        {
            <div class="col-sm-12 col-md-8">
                @Html.Hidden("ARGExamFormDownloadable", Newtonsoft.Json.JsonConvert.SerializeObject((CUSrinagar.Models.FeeStructure)ViewBag.FeeStructure))
                @using (Html.BeginForm("Payment", "Examination", FormMethod.Post, new { @class = "jsMainForm form-horizontal", @id = "ExaminationForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="name" class="col-sm-3 control-label text-primary"> Full Name :</label>
                        <div class="col-sm-9">@Model.StudentInfo.FullName</div>
                    </div>
                    <hr class="no-margin-top margin-bottom-10" />
                    <div class="form-group">
                        <label for="name" class="col-sm-3 control-label text-primary"> Registration No :</label>
                        <div class="col-sm-9">
                            @(string.IsNullOrEmpty(Model.StudentInfo.CUSRegistrationNo) ? Model.StudentInfo.StudentFormNo : Model.StudentInfo.CUSRegistrationNo)
                        </div>
                    </div>
                    <hr class="no-margin-top margin-bottom-10" />
                    <div class="form-group">
                        <label for="name" class="col-sm-3 control-label text-primary">Current Semester :</label>
                        <div class="col-sm-9">
                            @Model.StudentInfo.CurrentSemesterOrYear
                        </div>
                    </div>
                    <hr class="no-margin-top margin-bottom-10" />
                    if (Model.StudentInfo.SelectedCombinations != null)
                    {
                        var currentSemesterComb = Model.StudentInfo.SelectedCombinations.FirstOrDefault(x => x.Semester == Model.StudentInfo.CurrentSemesterOrYear && x.Semester == choosenSemester);
                        if (currentSemesterComb != null && currentSemesterComb.Subjects != null)
                        {
                            if (Model.StudentInfo.CurrentSemesterOrYear == 3 && currentSemesterComb.Subjects.Count < 3)
                            {
                                hasLessSubjects = true;
                            }
                            @Html.Hidden("IsRegular", true)
                            showSaveButton = true;
                            List<ADMSubjectMaster> currentSemSubjects = null;
                            if (currentSemesterComb.Semester == ViewBag.SemesterChoosen)
                            {
                                currentSemSubjects = currentSemesterComb.Subjects.OrderBy(x => x.SubjectType).Where(x => x.SubjectType != CUSrinagar.Enums.SubjectType.FirstSemesterExclusion).ToList();
                            }
                            else
                            {
                                currentSemSubjects = currentSemesterComb.Subjects.OrderBy(x => x.SubjectType).ToList();
                            }

                            <div class="form-group">
                                <label for="name" class="col-sm-3 control-label text-primary">Subjects to appear in :</label>
                                <div class="col-sm-9">
                                    <ol>
                                        @for (int i = 0; i < currentSemSubjects.Count; i++)
                                        {
                                            <li><i>@currentSemSubjects[i].SubjectFullName</i></li>
                                        }
                                    </ol>
                                </div>
                            </div>
                            <hr class="no-margin-top margin-bottom-10" />


                            if (_StudentExamForm.AdditionalSubjects != null)
                            {
                                var currentSemAdditionalSubject = _StudentExamForm.AdditionalSubjects.Where(x => x.Semester == Model.StudentInfo.CurrentSemesterOrYear).ToList();
                                <div class="form-group">
                                    <label for="name" class="col-sm-3 control-label text-primary">Additional subjects:</label>
                                    <div class="col-sm-9">
                                        <ol class="list-inline">
                                            @for (int i = 0; i < currentSemAdditionalSubject.Count; i++)
                                            {
                                                @Html.Hidden("_StudentExamForm.AdditionalSubjects[" + i + "].Subject_ID", _StudentExamForm.AdditionalSubjects[i].Subject_ID)
                                                @Html.Hidden("_StudentExamForm.AdditionalSubjects[" + i + "].AdditionalSubject_ID", _StudentExamForm.AdditionalSubjects[i].AdditionalSubject_ID)
                                                @Html.Hidden("_StudentExamForm.AdditionalSubjects[" + i + "].Semester", _StudentExamForm.AdditionalSubjects[i].Semester)
                                                @Html.Hidden("_StudentExamForm.AdditionalSubjects[" + i + "].Student_ID", _StudentExamForm.AdditionalSubjects[i].Student_ID)
                                                @Html.Hidden("_StudentExamForm.AdditionalSubjects[" + i + "].IsVerified", _StudentExamForm.AdditionalSubjects[i].IsVerified)
                                                <li class=""><i><label class="">@(i + 1)</label> @currentSemAdditionalSubject[i].Subject.SubjectFullName </i> </li>
                                            }
                                        </ol>
                                    </div>
                                </div>
                                <hr class="no-margin-top margin-bottom-10" />
                            }
                        }
                    }
                    if (_StudentExamForm != null)
                    {
                        @Html.Hidden("semester", choosenSemester)
                        @Html.Hidden("TotalRegularFee", _StudentExamForm.AmountPaid)
                        @Html.HiddenFor(item => _StudentExamForm.AmountPaid)
                        @Html.HiddenFor(item => _StudentExamForm.CreatedBy)
                        @Html.HiddenFor(item => _StudentExamForm.CreatedOn)
                        @Html.HiddenFor(item => _StudentExamForm.ExamRollNumber)
                        @Html.HiddenFor(item => _StudentExamForm.FormNumber)
                        @Html.HiddenFor(item => _StudentExamForm.IsRegular)
                        @Html.HiddenFor(item => _StudentExamForm.Semester)
                        @Html.HiddenFor(item => _StudentExamForm.Status)
                        @Html.HiddenFor(item => _StudentExamForm.StudentExamForm_ID)
                        @Html.HiddenFor(item => _StudentExamForm.Student_ID)
                        @Html.HiddenFor(item => _StudentExamForm.UpdatedBy)
                        @Html.HiddenFor(item => _StudentExamForm.UpdatedOn)
                        @Html.HiddenFor(item => _StudentExamForm.Year)
                        @Html.HiddenFor(item => _StudentExamForm.RecordState)
                        @Html.HiddenFor(item => _StudentExamForm.Notification_ID)
                        @Html.HiddenFor(item => _StudentExamForm.RecordState)

                        if (_StudentExamForm.ReAppearSubjects != null && _StudentExamForm.ReAppearSubjects.Count > 0 && 1 == 0)
                        {
                            showSaveButton = true;
                            <div class="table-responsive">
                                <br />
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Subjects in which to Re-Appear</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < _StudentExamForm.ReAppearSubjects.Count; i++)
                                        {
                                            <tr class="">
                                                <td>
                                                    @_StudentExamForm.ReAppearSubjects[i].SubjectFullName
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].Subject_ID", _StudentExamForm.ReAppearSubjects[i].Subject_ID)
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].SubjectFullName", _StudentExamForm.ReAppearSubjects[i].SubjectFullName)
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].Programme", _StudentExamForm.ReAppearSubjects[i].Programme)
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].StudentExamForm_ID", _StudentExamForm.ReAppearSubjects[i].StudentExamForm_ID)
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].StudentReExamForm_ID", _StudentExamForm.ReAppearSubjects[i].StudentReExamForm_ID)
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].Type", _StudentExamForm.ReAppearSubjects[i].Type)
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].IsApplied", _StudentExamForm.ReAppearSubjects[i].IsApplied)
                                                    @Html.Hidden("_StudentExamForm.ReAppearSubjects[" + i + "].FeeStatus", _StudentExamForm.ReAppearSubjects[i].FeeStatus)
                                                </td>
                                                <td>
                                                    <label class="pos-rel">
                                                        <input type="checkbox" id="@(CUSrinagar.Enums.ReExamType.Backlog + _StudentExamForm.ReAppearSubjects[i].SubjectFullName.Replace(" ", ""))" class="ace js-reExamSubject" name="ReAppearSubjectFullName" value="@CUSrinagar.Enums.ReExamType.Backlog" />
                                                        <label class="lbl " for="@(CUSrinagar.Enums.ReExamType.Backlog + _StudentExamForm.ReAppearSubjects[i].SubjectFullName.Replace(" ", ""))"><strong> Select </strong></label>

                                                    </label>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                    if (_StudentExamForm.LateFeeAmount > 0)
                    {
                        <div class="form-group">
                            <label for="name" class="col-sm-3 control-label text-primary"></label>
                            <div class="col-sm-9">
                                <div style="float:right">
                                    <b><span style="float:right">Examination Fee = <label style="font-size:x-large" class="text-danger" id="jsTotalFee">@(_StudentExamForm.AmountToBePaid)</label></span></b>
                                    <br /><b><span style="float:right">Late Fee =  <label style="font-size:x-large" class="text-danger" id="jsTotalFee">@_StudentExamForm.LateFeeAmount</label></span></b>
                                    <br /><b><span style="float:right">Amount Paid =  <label style="font-size:x-large" class="text-danger" id="jsTotalFee">@_StudentExamForm.AmountPaid</label></span></b>
                                </div>
                            </div>
                        </div>
                        <hr class="no-margin-top" />
                    }
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="pull-right">
                                <b><span>Total Fee = <label style="font-size:x-large" class="text-danger" id="jsTotalFee">@(_StudentExamForm.AmountToBePaid-_StudentExamForm.AmountPaid+_StudentExamForm.LateFeeAmount)</label></span></b>
                            </div>
                        </div>
                    </div>

                    <hr />
                    <div class="form-group">
                        <label for="name" class="col-sm-3 control-label text-primary">Payment Information :</label>
                        <div class="col-sm-4">
                            <input type="email" value="@_StudentExamForm.StudentInfo.StudentAddress.Email" autocomplete="off" id="Email" name="Email" placeholder="Email ID" class="form-control" required />
                        </div>
                        <div class="col-sm-4">
                            <input type="text" value="@_StudentExamForm.StudentInfo.StudentAddress.Mobile" autocomplete="off" id="MobileNumber" name="MobileNumber" placeholder="Mobile Number" class="form-control phone" required minlength="10" maxlength="11" />
                        </div>

                    </div>
                    <hr class="no-margin-top margin-bottom-10" />

                    if (hasLessSubjects)
                    {
                        <h3 class="danger alert-danger">
                            Combination not assigned properly. Please visit admission section of your college.
                        </h3>
                    }
                    else if (showSaveButton)
                    {
                        <div class=" form-group">
                            <div class="col-sm-12">
                                <div class="pull-right">
                                    @*<a href="@Url.Action("GetCombination", new { @semester = choosenSemester })" class="btn btn-success" id="SaveUpdateCombination">
                                            Edit Subject Info
                                        </a>*@
                                    <button class="btn btn-success" id="proceedToPayment" type="submit">
                                        Proceed to Payment
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="col-sm-12 col-sm-4 hidden-xs hidden-sm">
                <center>
                    <div class="thumbnail no-margin-bottom">
                        @if (Model.StudentInfo.Photograph != null)
                        {
                            <img src="@Url.Content(Model.StudentInfo.Photograph)" class="img-responsive max-height-200" />
                        }
                    </div>
                </center>
                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td class="text-primary">Name</td>
                            <td>@Model.StudentInfo.FullName</td>
                        </tr>
                        <tr>
                            <td class="text-primary">Course</td>
                            <td>@Model.StudentInfo.SelectedCombinations.First().CourseID</td>
                        </tr>
                        <tr>
                            <td class="text-primary">Batch</td>
                            <td>@Model.StudentInfo.Batch</td>
                        </tr>
                        <tr>
                            <td class="text-primary">College</td>
                            <td>@Model.StudentInfo.AcceptCollegeID</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }

    </div>
    <div class="col-sm-12 col-md-12">
        <div class="col-sm-12 col-md-12 text-danger">
            <h3><u>Note</u></h3>
            <ol>
                <li class="text-success">If you have already submitted fee or money has been deducted from your account and you are still unable to print your examination form. Please visit Cluster Univeristy I.T. Cell by or before last date.</li>
                <li class="">Those candidates who have not appeared in internal/continous assesment are not eligible to appear in exam and their forms will be cancelled.</li>
                <li class="">The Email Address and Phone Number  you enter here will be used to send the Payment Receipt.</li>
            </ol>
        </div>
    </div>
</div>

@section PageSpecificJSFiles{
    <script src="~/Scripts/Pages/student-examinationform.js"></script>
}
