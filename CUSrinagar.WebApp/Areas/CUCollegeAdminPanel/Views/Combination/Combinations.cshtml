@model CUSrinagar.Models.ADMCourseMaster
@{ViewBag.Title = "Combinations";}
<div class="row">
    <div id="response">
        @if (TempData["response"] != null)
        {
            @Html.Raw(TempData["response"])
        }
    </div>

    <div class="col-xs-12">
        <div class="widget-box">
            <div class="widget-header">
                <h4 class="widget-title"><i class='fa fa-search'></i> Search Combinations</h4>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    <div class="alert alert-warning text-center" style="display:none;" id="jsstatus"><i class="ace-icon fa fa-spinner fa-spin orange bigger-125"></i> Working...</div>
                    @using (Html.BeginForm("Combinations", "Combination", FormMethod.Post, new { @id = "SearchCombinationForm", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <div class="col-sm-3 lbl bigger-120 no-padding-right  disable-element disabled chosen-disabled">
                                @Html.LabelFor(m => m.College_ID)
                                <span class="red">*</span>
                                <span class="red"> @Html.ValidationMessageFor(m => m.College_ID)</span>
                                @Html.DropDownListFor(m => m.College_ID, (IEnumerable<SelectListItem>)ViewBag.Colleges, new { @class = "chosen-select form-control" })
                            </div>

                            <div class="col-sm-3 lbl bigger-120 no-padding-right">
                                @Html.LabelFor(m => m.Course_ID)
                                <span class="red">*</span>
                                <span class="red"> @Html.ValidationMessageFor(m => m.Course_ID)</span>
                                <div id="CourseDiv">
                                    @Html.DropDownListFor(m => m.Course_ID, (IEnumerable<SelectListItem>)ViewBag.Courses,  new { @class = "chosen-select form-control" })
                                </div>
                            </div>

                            <div class="col-sm-2 lbl bigger-120 no-padding-right">
                                @Html.LabelFor(m => m.SearchCombinationCode)
                                <span class="red"> @Html.ValidationMessageFor(m => m.SearchCombinationCode)</span>
                                @Html.TextBoxFor(m => m.SearchCombinationCode, new { @maxlength = "8", @class = "chosen-select form-control" })
                            </div>


                            <div class="col-sm-1 lbl bigger-120 no-padding-right">
                                <label for="Semester">Semester</label>
                                @Html.DropDownList("Semester", (IEnumerable<SelectListItem>)ViewBag.Semester,  new { @class = "chosen-select form-control" })
                            </div>

                            <div class="col-sm-2 lbl bigger-120 no-padding-right">
                                @Html.LabelFor(m => m.Status)
                                <span class="red"> @Html.ValidationMessageFor(m => m.Status)</span>
                                @Html.DropDownListFor(m => m.Status, (IEnumerable<SelectListItem>)ViewBag.Status, string.Empty, new { @class = "chosen-select form-control" })
                            </div>

                            <div class="col-sm-3 lbl bigger-120 no-padding-right" style="margin-top:26px">
                                <input type="hidden" name="btnclicked" id="btnclicked" />
                                <input id="JSSearch" type="submit" value="Search" name="command" class="btn btn-sm btn-success" />
                                &nbsp;&nbsp;&nbsp;
                                <input id="JSExcel" type="submit" name="command" value="Download Excel" class="btn btn-sm btn-success" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_SearchCombinations", Model)

@section PageSpecificJSFiles
{
    <script src="~/Scripts/JSChosen.js"></script>
    @Scripts.Render("~/bundles/Libraries/jqueryval", "~/bundles/Libraries/SCForm")
}
@section PageSpecificJS{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#College_ID").trigger('change');
            //$(".ac").addClass("active");
            //$(".dt").addClass("active open");


            $(document).on('click', '.jsDeleteMainItem', function () {
                var $tr = $(this).closest('tr');
                var msg = '<h4>Are you sure you want to delete this combination ?</h4>';
                //msg += '<h5>Once deleted this student, corresponding student has to reassign all its subject combination details</h5>';
                showConfirmationDialog(msg);
                $('#confirmationDialog').off('click.confirmation', 'button').on('click.confirmation', 'button', function () {
                    var $btn = $(this);
                    hideConfirmationDialog();
                    if ($btn.data('response') == 'yes') {
                        var _ID = $tr.find(".jsRow_ID").val();
                        DeleteCombination($tr, _ID);
                    }
                });
            });
        });

        function DeleteCombination($tr, _ID) {
            var _url = getBaseUrlCollege() + `Combination/Delete`;
            $.ajax({
                url: _url,
                type: "POST",
                datatype: "Json",
                async: false,
                data: { id: _ID },
                success: function (responseData) {
                    if (responseData.IsSuccess) {
                        showSuccessMessage(responseData.NumberOfRecordsEffected + ' row deleted successfully.');
                        $tr.remove();
                    } else {
                        showErrorMessage(responseData.ErrorMessage);
                    }
                },
                error: function (xhr, error, msg) {
                    showErrorMessage(msg);
                }
            });
        }
    </script>
}