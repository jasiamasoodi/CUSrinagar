@model  CUSrinagar.Models.AppUsers

@{
    int track;
    int trackint = ViewBag.track != null ? ViewBag.track + 1 : 0;
    int count = (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects.Count() > 0) ? Model.ProfessorSubjects.Count : (trackint + 1);
    bool hasValue = (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects.Count() > 0);
    bool hasmaxValue = (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects.Count() > 0 && Model.ProfessorSubjects[trackint].MaxRollNo != null);
    bool hasminValue = (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects.Count() > 0 && Model.ProfessorSubjects[trackint].MinRollNo != null);
}

@for (track = trackint; track < count; track++)
{
    string display = "display:none;";
    string Ischecked = "checked";
    if (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects.Count() == 0)
    { Model.ProfessorSubjects = null; }
    if (Model != null && Model.ProfessorSubjects != null)
    {
        if ((Model.ProfessorSubjects[track]?.RollNoFrom ?? "0") != "0" || (Model.ProfessorSubjects[track]?.RollNoTo ?? "0") != "0")
        {
            display = "display:block;";
            Ischecked = "";
        }
    }
    var sno = track + 1;
    <div id="Div_@track" class="col-sm-12 jssubjectcontainer no-padding-right no-padding-left">

        <div class="col-sm-2 lbl bigger-120 no-padding-right ">
            <span class="bigger-120"><b>@sno .</b>&nbsp;</span>
            <span style="color:red"> *</span> Course/Deptt <span id="Course_IDValidator" class="label label-sm label-danger arrowed-in-right arrowed"></span>
            <div>
                @Html.DropDownListFor(model => model.ProfessorSubjects[track].Course_ID, new SelectList(ViewBag.CourseDDLList, "Value", "Text", (hasValue) ? Model.ProfessorSubjects[track].Course_ID : Guid.Empty),
    "--Select--", new { @class = "ParentDDL chosen-select tag-input-style SearchDDL form-control jsfilterelement", @data_typeis = "Professor", @data_id = track, @data_column = "Course_ID", @data_operator = "EqualTo", data_ddltype = "Semester", @data_ddlchildtype = "Subject", @data_ddlsubchildtype = "" })
            </div>

            <div class="col-sm-2">
                @Html.ValidationMessageFor(model => model.ProfessorSubjects[track].Course_ID, "", new { @class = "label label-sm label-danger arrowed-in-right arrowed" })

            </div>
        </div>
        <div class="col-sm-1 lbl bigger-120 no-js no-padding-right">

            <span style="color:red;"> *</span> Semester <span id="Semester_IDValidator" class="label label-sm label-danger arrowed-in-right arrowed"></span>
            <div id="Semester_@track">
                @Html.DropDownListFor(model => model.ProfessorSubjects[track].Semester, new SelectList((IEnumerable<SelectListItem>)ViewBag.Semesters, "Value", "Text", (hasValue) ? Model.ProfessorSubjects[track].Semester : 0),
                       "--Select--", new { @class = "ParentDDL chosen-select tag-input-style SearchDDL form-control jsfilterelement SemesterChange", @data_id = track, @data_operator = "EqualTo", @data_typeis = "Professor", data_ddltype = "Subject", @data_ddlchildtype = "", @data_ddlsubchildtype = "", data_track = track })
            </div>

            <div class="col-sm-2">
                @Html.ValidationMessageFor(model => model.ProfessorSubjects[track].Semester, "", new { @class = "label label-sm label-danger arrowed-in-right arrowed" })

            </div>

        </div>

        <div class="col-sm-2 lbl bigger-120 no-padding-right">

            <span style="color:red"> *</span> Subject <span id="Course_IDValidator" class="label label-sm label-danger arrowed-in-right arrowed"></span>


            <div id="Subject_@track">
                @Html.DropDownListFor(model => model.ProfessorSubjects[track].Subject_ID, new SelectList((IEnumerable<SelectListItem>)ViewData["SubjectDDLList" + track], "Value", "Text", (hasValue) ? Model.ProfessorSubjects[track].Subject_ID : Guid.Empty),
    "--Select--", new { @class = " chosen-select tag-input-style SearchDDL form-control jsfilterelement", @data_id = track, @data_typeis = "Professor", @data_operator = "EqualTo", @data_ddlchildtype = "", @data_ddlsubchildtype = "" })

            </div>

            <div class="col-sm-2">
                @Html.ValidationMessageFor(model => model.ProfessorSubjects[track].Subject_ID, "", new { @class = "label label-sm label-danger arrowed-in-right arrowed" })

            </div>

        </div>


        <div class="col-sm-1 lbl bigger-120 no-js no-padding-right">
            All Roll-Nos
            <div id="Rangeall_@track">
                <input id="RangeCB_@track" type="checkbox" value="Rangeall" name="Rangeall" style="margin-top: 17px;" onclick="ShowHideDiv(this,@track)" @Ischecked />
            </div>
        </div>
        @{ hasmaxValue = (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects.Count() > 0 && Model.ProfessorSubjects[track].MaxRollNo != null);
            hasminValue = (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects.Count() > 0 && Model.ProfessorSubjects[track].MinRollNo != null);
        }
        <div class="col-sm-3  no-padding-right no-padding-left" id="Rollno_@track" style=@display>
            <div class="col-sm-6 lbl bigger-120 no-js no-padding-right no-padding-left">
                @*style="padding-top: 18px;"*@
                <div id="RollNoFrom">
                    From
                    @Html.TextBoxFor(model => model.ProfessorSubjects[track].RollNoFrom, new { @class = "roolf form-control width100 jsvalrollnofrom", @min = hasminValue ? @Model.ProfessorSubjects[track].MinRollNo : "9999999", @max = hasmaxValue ? @Model.ProfessorSubjects[track].MaxRollNo : "9999999", @data_id = track, @maxlength = hasmaxValue ? @Model.ProfessorSubjects[track].MaxRollNo.ToString().Length : 15, @onkeypress = "return numbersOnly(event);", @title = "RollNo From", placeholder = "Class Roll No. From" })
                </div>
            </div>

            <div class="col-sm-6 lbl bigger-120 no-js ">
                @*style="padding-top: 18px;"*@
                <div id="RollNoTo">
                    To
                    @Html.TextBoxFor(model => model.ProfessorSubjects[track].RollNoTo, new { @class = "roolt form-control width100 jsvalRange", @min = hasminValue ? @Model.ProfessorSubjects[track].MinRollNo : "9999999", @max = hasmaxValue ? @Model.ProfessorSubjects[track].MaxRollNo : "9999999", @data_id = track, @maxlength = hasmaxValue ? @Model.ProfessorSubjects[track].MaxRollNo.ToString().Length : 15, @onkeypress = "return floatNumbersOnly(event);", @title = "RollNo To", placeholder = "Class Roll No. To" })
                </div>
            </div>
        </div>

        <div class="col-sm-2 lbl bigger-120 no-js no-padding-right no-padding-left" style="margin-top:13px;color: #2c30a9;">
            @Html.HiddenFor(model => model.ProfessorSubjects[track].MinRollNo)
            @Html.HiddenFor(model => model.ProfessorSubjects[track].MaxRollNo)
            <div id="MinMax_@track" style="color: #2c30a9;@display">
                First RollNo: @(hasminValue ? Model.ProfessorSubjects[track].MinRollNo : "0")<br />Last RollNo: @(hasmaxValue ? Model.ProfessorSubjects[track].MaxRollNo : "0")
                <br />No. of Students: @(hasValue ? Model.ProfessorSubjects[track].NoofStudents : "0")
            </div>
        </div>
        @if (Model != null && Model.ProfessorSubjects != null && Model.ProfessorSubjects[track] != null && count > 1)
        {
            <div class="col-sm-1 align-right" style="margin-top:26px;">
                @*<a href="@Url.Action("Delete", "UserProfile", new { area = "CUCollegeAdminPanel",user_id=Model.User_ID, id = Model.ProfessorSubjects[track].ProfessorSubject_ID})" class="jsDeleteItem fa  fa-trash-o red bigger-240"></a>*@

                <a title="delete" href="#" class="jsDeleteItem red bigger-240" data-url="@Url.Action("Delete", "UserProfile", new { area = "CUCollegeAdminPanel",user_id=Model.User_ID, id = Model.ProfessorSubjects[track].ProfessorSubject_ID})"><i class="fa fa-trash "></i></a>

            </div>
        }

        @if (Model == null)
        {
            <div class="  align-right" style="margin-top:26px;" id="DeleteNew_@track">
                <a href="#ab" id="DeleteNew" data-id="@(track)" class=" fa  fa-trash-o red bigger-240">
                </a>
            </div>
        }




    </div>

}


@*<script>$("#DeleteNew_@(track-1)").remove();</script>*@


@if ((Model == null && track == 1) || (Model != null))
{<div class="col-sm-1 lbl bigger-120 no-js" style="margin-top:18px;margin-bottom:10px">
        <button type="button" id="addNew" data-id="@(track - 1)" class="btn btn-success btn-sm"> Add New</button>

    </div>
}



@section PageSpecificJS{
    <script type="text/javascript">
    var trackap=@track;
        $(document).ready(function () {
            if($("#DeleteNew_@(track-1)").length>0){
                $("#DeleteNew_@(track-1)").remove();
            }
        });
    </script>
}





